#!/usr/bin/env python3
"""
Setup script for PFF Data Query environment variables.
This script helps you set up your environment variables for PFF authentication.
"""

import os
import sys


def setup_environment():
    """Interactive setup for environment variables."""
    print("PFF Data Query Environment Setup")
    print("=" * 40)
    print()
    print("This script will help you set up your environment variables for PFF authentication.")
    print("You'll need to provide your PFF authentication tokens.")
    print()

    # Get user input for each environment variable
    env_vars = {}

    print("Please enter your PFF authentication information:")
    print()

    env_vars['PFF_PREMIUM_KEY'] = input("PFF Premium Key: ").strip()
    env_vars['PFF_ACCESS_TOKEN'] = input("PFF Access Token: ").strip()
    env_vars['PFF_ACCESS_TS'] = input("PFF Access Timestamp: ").strip()
    env_vars['PFF_REFRESH_TOKEN'] = input("PFF Refresh Token: ").strip()

    # Validate that all values were provided
    missing_vars = [key for key, value in env_vars.items() if not value]
    if missing_vars:
        print(f"\nError: Missing values for: {', '.join(missing_vars)}")
        return False

    # Create .env file
    env_content = "# PFF Authentication Environment Variables\n"
    env_content += "# Generated by setup_env.py\n\n"

    for key, value in env_vars.items():
        env_content += f"{key}={value}\n"

    try:
        with open('.env', 'w') as f:
            f.write(env_content)
        print(f"\n✅ Environment variables saved to .env file")
        print(f"📝 You can now run your PFF data query scripts!")
        return True
    except Exception as e:
        print(f"\n❌ Error saving .env file: {e}")
        return False


def load_dotenv():
    """Load environment variables from .env file."""
    try:
        with open('.env', 'r') as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#'):
                    key, value = line.split('=', 1)
                    os.environ[key] = value
        return True
    except FileNotFoundError:
        print("❌ .env file not found. Run setup_env.py first.")
        return False
    except Exception as e:
        print(f"❌ Error loading .env file: {e}")
        return False


if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] == "load":
        # Load environment variables
        if load_dotenv():
            print("✅ Environment variables loaded successfully")
        else:
            sys.exit(1)
    else:
        # Setup environment variables
        if setup_environment():
            print("\n🎉 Setup complete!")
            print("\nTo use these environment variables in your scripts:")
            print("1. Import the load_dotenv function: from setup_env import load_dotenv")
            print("2. Call load_dotenv() at the start of your script")
            print("3. Or run: python setup_env.py load")
        else:
            sys.exit(1)
